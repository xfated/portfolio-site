[{"/Users/kaiyang.tay/Documents/mystuff/profile-site/src/index.js":"1","/Users/kaiyang.tay/Documents/mystuff/profile-site/src/App.js":"2","/Users/kaiyang.tay/Documents/mystuff/profile-site/src/reportWebVitals.js":"3","/Users/kaiyang.tay/Documents/mystuff/profile-site/src/components/Main.js":"4","/Users/kaiyang.tay/Documents/mystuff/profile-site/src/components/Header.js":"5","/Users/kaiyang.tay/Documents/mystuff/profile-site/src/components/AboutMe.js":"6","/Users/kaiyang.tay/Documents/mystuff/profile-site/src/profile/myinfo.js":"7","/Users/kaiyang.tay/Documents/mystuff/profile-site/src/components/Timeline.js":"8","/Users/kaiyang.tay/Documents/mystuff/profile-site/src/profile/experience.js":"9"},{"size":643,"mtime":1612228892694,"results":"10","hashOfConfig":"11"},{"size":275,"mtime":1612414945539,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1612228892695,"results":"13","hashOfConfig":"11"},{"size":423,"mtime":1612414945540,"results":"14","hashOfConfig":"11"},{"size":1991,"mtime":1612414945540,"results":"15","hashOfConfig":"11"},{"size":228,"mtime":1612414945540,"results":"16","hashOfConfig":"11"},{"size":115,"mtime":1612228892694,"results":"17","hashOfConfig":"11"},{"size":5354,"mtime":1612503917447,"results":"18","hashOfConfig":"11"},{"size":4172,"mtime":1612519017978,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1iqx45r",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kaiyang.tay/Documents/mystuff/profile-site/src/index.js",[],["41","42"],"/Users/kaiyang.tay/Documents/mystuff/profile-site/src/App.js",[],"/Users/kaiyang.tay/Documents/mystuff/profile-site/src/reportWebVitals.js",[],"/Users/kaiyang.tay/Documents/mystuff/profile-site/src/components/Main.js",[],"/Users/kaiyang.tay/Documents/mystuff/profile-site/src/components/Header.js",[],"/Users/kaiyang.tay/Documents/mystuff/profile-site/src/components/AboutMe.js",["43"],"import React, { Component } from 'react';\nimport Timeline from './Timeline';\n\nconst AboutMe = (props) => {\n    return(\n        <React.Fragment>\n            <Timeline />\n        </React.Fragment>\n    );\n}\n\nexport default AboutMe;","/Users/kaiyang.tay/Documents/mystuff/profile-site/src/profile/myinfo.js",[],"/Users/kaiyang.tay/Documents/mystuff/profile-site/src/components/Timeline.js",["44","45","46"],"import React, { Component } from 'react';\nimport { VerticalTimeline, VerticalTimelineElement }  from 'react-vertical-timeline-component';\nimport 'react-vertical-timeline-component/style.min.css';\nimport './Timeline.css';\nimport { Experience } from '../profile/experience.js';\nimport { Button } from 'reactstrap';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nconst block = getComputedStyle(document.documentElement).getPropertyValue(\"--block\");\nconst background = getComputedStyle(document.documentElement).getPropertyValue(\"--background\");\nconst highlight = getComputedStyle(document.documentElement).getPropertyValue(\"--highlight\");\nconst header = getComputedStyle(document.documentElement).getPropertyValue(\"--header\");\nconst muted = getComputedStyle(document.documentElement).getPropertyValue(\"--muted\");\nconst text = getComputedStyle(document.documentElement).getPropertyValue(\"--text\");\n\nclass Timeline extends Component {\n    \n    constructor(props) {\n        super(props);\n\n        // Get list for experience \n        const numExp = Experience.length;\n        const expList = new Array(numExp);\n        for (var i =0; i < numExp; i ++) { expList[i] = false; }\n\n        this.state = {\n            experienceClicked: expList\n        };\n\n        this.toggleExperienceState = this.toggleExperienceState.bind(this);\n    }\n\n    toggleExperienceState = (i) => {\n        this.setState(state => {\n            const list = state.experienceClicked.map((item, j) => {\n                if (j===i){\n                    return !item;\n                } else {\n                    return item;\n                }\n            });\n            return {\n                experienceClicked: list,\n            };\n        });\n    };\n\n    render() {\n        const TimelineElements = Experience.map((exp, index) => {\n            const desc = exp.description.split('\\n').map((line) => {\n                return (\n                    <span>{line}<br /></span>\n                )\n            });\n\n\n            return(\n                <VerticalTimelineElement\n                        className=\"vertical-timeline-element--work\"\n                        contentStyle={{ background: `${block}`, color: `${text}`, \n                                borderTop: `3px solid ${muted}` }}\n                        contentArrowStyle={{ borderRight: `7px solid ${block}` }}\n                        date={exp.date}\n                        iconStyle={{background: `#ffffff`}}\n                        iconOnClick={() => this.toggleExperienceState(index)}\n                        icon={<img className='logo' src={exp.logo} alt='' />}\n                    >\n                        <div className=\"row\">\n                            <div className=\"col-12 col-md-8\">\n                                <h4 className=\"vertical-timeline-element-title timeline-header\">{exp.title}</h4>\n                                <h6 className=\"vertical-timeline-element-subtitle timeline-header\"><i>{exp.location}</i></h6>\n                                \n                                <div>\n                                    <TransitionGroup component={null}>\n                                        { this.state.experienceClicked[index] && \n                                            <CSSTransition classNames=\"desc\" timeout={300}>\n                                                <p>\n                                                {desc}\n                                                </p>\n                                            </CSSTransition>\n                                        }\n                                    </TransitionGroup>\n                                </div>\n                            </div>\n                            <div className=\"d-none d-md-block col-md-4\">\n                                \n                            </div>\n                            <div className=\"col-12\">\n                                <div className=\"timeline-desc text-center\"\n                                    onClick={() => this.toggleExperienceState(index)} >\n                                    <Button size=\"block\" className=\"ml-auto desc-button\">\n                                        <small>\n                                            { !this.state.experienceClicked[index] && \n                                                <i class=\"fa fa-angle-down\"></i>\n                                            }\n                                            { this.state.experienceClicked[index] && \n                                                <i class=\"fa fa-angle-up\"></i>\n                                            }\n                                        </small>\n                                    </Button>\n                                </div> \n                            </div>\n                        </div>\n                    </VerticalTimelineElement>\n            )\n        });\n        return(\n            <div className=\"theme-background\">\n                <VerticalTimeline className=\"vertical-timeline theme-background\" layout='1-column-left'>\n                    {TimelineElements}\n                    <VerticalTimelineElement\n                        iconStyle={{ background: 'rgb(16, 204, 82)', color: '#fff' }}\n                    />\n                </VerticalTimeline>\n            </div>\n        );\n    } \n    \n}\n\nexport default Timeline;","/Users/kaiyang.tay/Documents/mystuff/profile-site/src/profile/experience.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":26},{"ruleId":"51","severity":1,"message":"55","line":10,"column":7,"nodeType":"53","messageId":"54","endLine":10,"endColumn":17},{"ruleId":"51","severity":1,"message":"56","line":11,"column":7,"nodeType":"53","messageId":"54","endLine":11,"endColumn":16},{"ruleId":"51","severity":1,"message":"57","line":12,"column":7,"nodeType":"53","messageId":"54","endLine":12,"endColumn":13},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'background' is assigned a value but never used.","'highlight' is assigned a value but never used.","'header' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]