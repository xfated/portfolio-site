{"version":3,"sources":["components/Projects.js","profile/myinfo.js","components/Description.js","profile/experience.js","profile/theme.js","components/Icon.js","components/Timeline.js","profile/projects.js","components/AboutMe.js","components/Decrypt.js","components/Header.js","components/Footer.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["MyInfo","firstname","lastname","description","displaypic","titles","profile_info","quote","quote_source","resume","linkedin","github","footer_quote","Description","props","profile_desc","split","map","line","i","className","src","process","alt","title","Button","onClick","saveAs","replaceAll","href","Experience","location","date","shortdesc","skills","logo","Theme","block","getComputedStyle","document","documentElement","getPropertyValue","background","highlight","header","muted","text","Icon","Timeline","toggleExperienceState","setState","state","experienceClicked","item","j","numExp","length","expList","Array","bind","TimelineElements","exp","index","desc","skill","contentStyle","color","borderTop","contentArrowStyle","borderRight","iconStyle","iconOnClick","icon","TransitionGroup","component","CSSTransition","classNames","timeout","size","layout","Component","ExpProjects","subtitle","linktitle","category","image","link","briefdesc","details","year","numProjects","initModalList","Projects","useState","modalList","setModalList","RenderProject","project","toggleModal","key","style","cursor","Card","CardImg","height","objectFit","CardBody","CardTitle","tag","CardText","ProjectCards","idx","newList","toggleProjectModal","project_desc","includes","replace","sentence","part","spaceIndex","indexOf","substring","Modal","isOpen","toggle","ModalHeader","charCode","ModalBody","fontSize","outline","ModalFooter","AboutMe","Fragment","Decrypt","total_time","parseInt","time","word","time_per_letter","letters","num_letters","initText","String","prototype","replaceAt","replacement","this","substr","Math","floor","random","setText","count","setCount","updateWord","letter","setTimeout","remainder","useEffect","animateDecrypt","Header","isNavOpen","user","mounted","toggleNav","resizedScreen","window","addEventListener","innerWidth","Jumbotron","backgroundImage","backgroundSize","borderRadius","Container","in","Footer","withRouter","path","to","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f857952c.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport { Card, CardImg, CardBody, CardImgOverlay, CardTitle, CardText,\r\n        Modal, ModalHeader, ModalBody, ModalFooter, Button} from 'reactstrap';\r\nimport { ExpProjects } from '../profile/projects.js';\r\nimport './Projects.css';\r\n\r\n// create list for modal status\r\nconst numProjects = ExpProjects.length;\r\nconst initModalList = new Array(numProjects);\r\nfor (var i=0; i < numProjects; i++) {initModalList[i] = false;}\r\n\r\nconst Projects = (props) => {\r\n\r\n    const [modalList, setModalList] = useState(initModalList);\r\n    \r\n    function toggleProjectModal(idx){\r\n        return () => {\r\n            let newList = [...modalList];\r\n            newList[idx] = !newList[idx]\r\n            setModalList(newList)\r\n        }\r\n    }\r\n\r\n    function RenderProject( {project, toggleModal, key} ){\r\n        return (\r\n            <a style={{cursor:'pointer'}} onClick={toggleModal}>\r\n                <Card className=\"project-card\" key={key}>\r\n                    <div className=\"project-card-img mt-0 mb-0\">\r\n                        <CardImg style={{height:\"100%\", objectFit:\"cover\"}} src={`${process.env.PUBLIC_URL}/${project.image}`} alt={project.title}></CardImg>\r\n                    </div>\r\n                    <CardBody>\r\n                        <CardTitle tag=\"h5\">{project.title}</CardTitle>\r\n                        <CardText>\r\n                            {project.briefdesc}\r\n                        </CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </a>\r\n        );\r\n    };\r\n\r\n    const ProjectCards = (category) => { \r\n        return ExpProjects.map((project, idx) => {\r\n            const toggleModal = toggleProjectModal(idx);\r\n            const project_desc = project.details.map((line,i) => {\r\n                /* Title */\r\n                if (line.includes(\"<h3>\")){\r\n                    return <h3 className=\"project-modal-title border-bottom\" key={line+i}><strong>{line.replace(\"<h3>\",\"\")}</strong></h3>\r\n                }\r\n                if (line.includes(\"<h6>\")){\r\n                    return <h6 key={line+i}>{line.replace(\"<h6>\",\"\")}</h6>\r\n                }\r\n                /* Bold */\r\n                if (line.includes(\"**\")){\r\n                    const sentence = line.split(\"**\").map((part,i) => {\r\n                        return (i%2!=0) ? <strong>{part}</strong> : <span>{part}</span>;\r\n                    });\r\n                    return (\r\n                        <span className=\"project-modal-text\" key={line+i}>{sentence}<br/></span>\r\n                    )\r\n                }\r\n                /* Emphasis on first word */\r\n                if (line.includes(\"<boldfirst>\")){\r\n                    line = line.replace(\"<boldfirst>\",\"\");\r\n                    let spaceIndex = line.indexOf(' ');\r\n                    return (\r\n                        <span className=\"project-modal-text\">\r\n                            <strong>{line.substring(0,spaceIndex)}</strong>\r\n                            <span>{line.substring(spaceIndex, line.length)}</span>\r\n                            <br />\r\n                        </span>\r\n                    );\r\n                }\r\n                return (\r\n                        <span className=\"project-modal-text\" key={line+i}>{line}<br /></span>\r\n                    )\r\n            });\r\n            \r\n            if (project.category===category){\r\n                return (\r\n                    <div className=\"col-6 col-md-4 col-lg-3 p-4\">\r\n                        <div>\r\n                            <RenderProject project={project} toggleModal={toggleModal} key={project.title} />\r\n                            <Modal isOpen={modalList[idx]} toggle={toggleModal} className=\"modal-w80\">\r\n                                <ModalHeader toggle={toggleModal} charCode=\"x\" className=\"flex\">\r\n                                    {project.title}\r\n                                </ModalHeader>\r\n                                <ModalBody>\r\n                                    <div className=\"col-12 mb-3 flex flex-vertical-center\">\r\n                                        <span className=\"project-modal-title\" style={{fontSize:\"1.75rem\"}}><strong>Link:&emsp;</strong></span> \r\n                                        <Button outline className=\"project-modal-text\" color=\"secondary\" href={project.link}>{project.linktitle}</Button>\r\n                                    </div>\r\n                                    <div className=\"col-12\">\r\n                                        {project_desc}\r\n                                    </div>\r\n                                </ModalBody>\r\n                                <ModalFooter>\r\n                                    <div className=\"ml-auto\">\r\n                                        <cite>Completed in</cite> <strong>2020</strong>\r\n                                    </div>\r\n                                </ModalFooter>\r\n                            </Modal>\r\n                        </div>  \r\n                    </div>\r\n                );\r\n            }\r\n            else{\r\n                return(\r\n                    <></>\r\n                );\r\n            }\r\n        });\r\n    };\r\n\r\n    return(\r\n        <div className=\"project-section\">\r\n            <div className=\"section-header col-12 text-center\">\r\n                <h1 className=\"mb-0\">Projects</h1>\r\n                <p>Stuff I'd say I'm proud of</p>\r\n            </div>\r\n            <div className=\"flex flex-horizontal-center\">\r\n                <div className=\"project-container\">\r\n                    <div className=\"row mb-5 text-left\">\r\n                        <div className=\"col-12\">\r\n                            <h3 className=\"p-2 border-bottom border-dark mb-4\">Competitions</h3>\r\n                        </div>\r\n                        {ProjectCards('competition')}\r\n                    </div>\r\n                    <div className=\"row mb-5\">\r\n                        <div className=\"col-12\">\r\n                            <h3 className=\"p-2 border-bottom border-dark mb-4\">Hackathons</h3>\r\n                        </div>\r\n                        {ProjectCards('hackathon')}\r\n                    </div>\r\n                    <div className=\"row mb-5\">\r\n                        <div className=\"col-12\">\r\n                            <h3 className=\"p-2 border-bottom border-dark mb-4\">Side Projects</h3>\r\n                        </div>\r\n                        {ProjectCards('sideproject')}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Projects;","export const MyInfo = \r\n{\r\n    firstname: \"Kai Yang\",\r\n    lastname: \"Tay\",\r\n    description: \"A Penultimate Electrical Engineering Undergraduate.\\n\"+\r\n        \"Here to make a change.\",\r\n    displaypic:\"assets/images/profile_pic.jpg\",\r\n    titles: \"Tay Kai Yang\\n\"+\r\n            \"Penultimate Electrical Engineering student from NUS\",\r\n    profile_info:\"I embrace continuous learning, and this website is just a small project to try something new. \\n\" +\r\n                \"A Machine Learning enthusiast, I am keen on the use of technology to democratize technology.\"+\r\n                \" By utilizing machine intelligence to automate all possible laborious and repititive tasks, I hope \" +\r\n                \"to free up people's time to focus on the things that matter.\",\r\n    quote:\"Live as if you were to die tomorrow. Learn as if you were to live forever.\",\r\n    quote_source:\"Mahatma Gandhi\",\r\n    resume:\"/assets/KaiYang_Resume.pdf\",\r\n    linkedin: \"https://www.linkedin.com/in/kai-yang-tay/\",\r\n    github: \"https://github.com/xfated\",\r\n    footer_quote:\"Technicolor dream-notes.\"\r\n}","import React from 'react';\r\nimport { MyInfo } from '../profile/myinfo'\r\nimport { saveAs }  from 'file-saver';\r\nimport { Button } from 'reactstrap';\r\nimport './Description.css';\r\n\r\nconst Description = (props) => {\r\n\r\n    const saveFile = () => {\r\n        saveAs(\r\n            MyInfo.resume, `${(MyInfo.firstname).replaceAll(/\\s/g,'')}${(MyInfo.lastname).replaceAll(/\\s/g,'')}_Resume.pdf`\r\n        );\r\n    }\r\n\r\n    const profile_desc = MyInfo.profile_info.split('\\n').map((line,i) => {\r\n        return (\r\n            <span key={line+i}>{line}<br /></span>\r\n        )\r\n    });\r\n\r\n    const titles = MyInfo.titles.split('\\n').map((line,i) => {\r\n        return (\r\n            <span key={line+i}><strong>{line}</strong><br /></span>\r\n        )\r\n    });\r\n\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"profile-container flex\">\r\n                <div className=\"col-12 text-center section-header\">\r\n                    <br/>\r\n                    <h1 className=\"mb-0\">About Myself</h1>\r\n                    <small>A small introduction</small>\r\n                    <br/>\r\n                </div>\r\n                <div className=\"col-12 col-md-6 flex flex-horizontal-center\">\r\n                    <div className=\"profile-pic-frame\">\r\n                        <img className=\"profile-pic\" src={`${process.env.PUBLIC_URL}/${MyInfo.displaypic}`} alt='profile picture'/>\r\n                    </div>\r\n                </div>    \r\n                <div className=\"col-12 col-md-6\">\r\n                    <div className=\"col-12 profile-info\">\r\n                        <div className=\"block text-justify\">\r\n                            <br />\r\n                            <h6>{titles}</h6>\r\n                            <br />\r\n                            {profile_desc}\r\n                            <br /> <br /> \r\n                            <blockquote className=\"blockquote text-center\">\r\n                                <i className=\"fa fa-quote-left fa-pull-left\"></i>\r\n                                <p className=\"mb-0\">\r\n                                    {MyInfo.quote}\r\n                                </p>\r\n                                <i className=\"fa fa-quote-right fa-pull-right\"></i>\r\n                                <footer className=\"blockquote-footer\">\r\n                                    <cite title=\"Source Title\">{MyInfo.quote_source}</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                            <br /> <br />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                        <Button className=\"resume-download\" onClick={saveFile}>Resume</Button>\r\n                    </div>\r\n                    <div className=\"col-12 profile-social\">\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href={MyInfo.linkedin}> <i className=\"fa fa-linkedin\"></i> </a>\r\n                        <a className=\"btn btn-social-icon btn-github\" href={MyInfo.github}> <i className=\"fa fa-github\"></i> </a>\r\n                    </div>\r\n                </div>               \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Description;","export const Experience = [\r\n    {\r\n        title: \"Data Science Intern (Security)\",\r\n        location: \"Shopee\",\r\n        date: \"Dec 2020 - Present\",\r\n        shortdesc: \"Facial Recognition work in KYC solutions.\",\r\n        description: \"\",\r\n        skills: \"Python,MXNet,ONNX\",\r\n        logo: \"assets/images/experiences/shopee_logo.png\"\r\n    },\r\n    {\r\n        title: \"Machine Learning Engineer Intern\",\r\n        location: \"NDR Medical Technology Pte Ltd\",\r\n        date: \"Jul 2020 - Nov 2020\",\r\n        shortdesc:'Utilized computer vision to automate needle detection in minimally-invasive procedures.',\r\n        description: \"- Smart robotic biopsy needle path planning for lung biopsy. \\n\" +\r\n                    \"- Developed algorithm for automatic needle alignment using X-ray image. \\n\" +\r\n                    \"- Developed needle detection capabilities using image processing techniques and object detection neural network. \\n\" +\r\n                    \"- Developed data augmentation script to generate new images/experiences for training to improve model accuracy.\",\r\n        skills: \"C#,OpenCV,Object Detection,Image Processing\",\r\n        logo: \"assets/images/experiences/ndr_logo.png\"\r\n    },\r\n    {\r\n        title: \"System Software Engineer Intern\",\r\n        location: \"GovTech Singapore\",\r\n        date: \"May 2020 - Jul 2020\",\r\n        shortdesc:'Optimized test procedure for embedded devices and integrated facial recognition devices with smart office infrastructure',\r\n        description: \"- Built webhook service for chatbot backend architecture. \\n\" +\r\n                    \"- Optimized and automated testing and provisioning process for embedded devices to shorten time required by 500%. \\n\" +\r\n                    \"- Integration of facial recognition device into smart office using REST API and MQTT frameworks.\",\r\n        skills: \"REST,MQTT,NodeJS,Python\",\r\n        logo: \"assets/images/experiences/govtech_logo.gif\"\r\n    },\r\n    {\r\n        title: \"Deputy Project Manager NUS RoboMaster \",\r\n        location: \"NUS Team LumiNUS\",\r\n        date: \"Dec 2019 - Jul 2020\",\r\n        shortdesc:'Part of the pioneering team to develop robots to compete in the RoboMaster Robotics Competition.',\r\n        description: \"- Developed real-time software architecture for robots to interface with different sensors and motors. \\n\" +\r\n                        \"- Implemented control loops for precise movement control. \\n\" +\r\n                        \"- Embedded systems development in an ARM Cortex microcontroller.\",\r\n        skills: \"C,Robotics,Control Systems\",\r\n        logo: \"assets/images/experiences/luminus_logo.png\"\r\n    },\r\n    {\r\n        title: \"Academics Director\",\r\n        location: \"NUS ECE Club\",\r\n        date: \"Aug 2019 - Jul 2020\",\r\n        shortdesc:'Oversaw the planning and organizing of academic activities to provide opportunities for ECE undergraduates.',\r\n        description: \"- Oversaw the planning and organizing of academic activities to provide opportunities for ECE undergraduates. \\n\" +\r\n                    \"- Liaised with external parties to organize 2 Fusion360 workshops, and industrial visit to GlobalFoundries.\\n\" +\r\n                    \"- Liaised with ECE Department for matters on outreach.\\n\" +\r\n                    \"- Organized webinar on cloud computing to introduce students to the industry.\",\r\n        skills: \"Communication,Planning,Collaboration\",\r\n        logo: \"assets/images/experiences/ececlub_logo.png\"\r\n    },\r\n    {\r\n        title: \"Teaching Assistant\",\r\n        location: \"National University of Singapore\",\r\n        date: \"Aug 2019 - Dec 2019\",\r\n        shortdesc:'Supervised and facilitated freshmen in lab studio activities.',\r\n        description: \"Teaching Assistant for the module - ENGINEERING PRINCIPLES AND PRACTICE I for computer engineering. (Module Code - CG1111) \\n\\n\" +\r\n                        \"- Supervised and facilitated freshmen in lab studio activities. \\n\" +\r\n                        \"- Explained content and clarified doubts to improve students' understanding of concepts.\",\r\n        skills: \"Professionalism,Communication,Mentoring\",\r\n        logo: \"assets/images/experiences/nus_logo.png\"\r\n    },\r\n    {\r\n        title: \"Marketing Director\",\r\n        location: \"NUS EnginCamp 2019\",\r\n        date: \"Nov 2018 - Jul 2019\",\r\n        shortdesc:'Led a group of 7 to manage sponsorship for a major Freshmen Orientation Camp.',\r\n        description: \"- Led a group of 7 to manage sponsorship for a major Freshmen Orientation Camp. \\n\" +\r\n                    \"- Negotiated with external companies and secured more than $4000 worth of sponsorship. \\n\" +\r\n                    \"- Liaised with sponsors to complete deliverables during the camp.\",\r\n        skills: \"Planning,Organization,Outreach\",\r\n        logo: \"assets/images/experiences/nus_logo.png\"\r\n    },\r\n    {\r\n        title: \"Project Management Intern\",\r\n        location: \"SP Group\",\r\n        date: \"Nov 2017 - May 2018\",\r\n        shortdesc:'Facilitated discussions and ensured smooth progression of SPEAR projects to enhance Singapore\\'s energy infrastructure',\r\n        description: \"Centre of Excellence (Technology Evaluation and Piloting team)\\n\\n\" +\r\n                    \"- Assisted in project management of SPEAR projects aimed towards enhancing Singapore's energy infrastructure.\\n\" +\r\n                    \"- Facilitated discussions to ensure clear understanding between vendor and users.\\n\" +\r\n                    \"- Tested software application to identify defects to verify feasibility of project deliverable.\\n\" +\r\n                    \"- Scoped and refined collaboration agreement to meet project requirements\",\r\n        skills: \"Communication,Time-Managment,Organization,Attention to Detail\",\r\n        logo: \"assets/images/experiences/spgroup_logo.png\"\r\n    }\r\n]","export const Theme = {\r\n    block: getComputedStyle(document.documentElement).getPropertyValue(\"--block\"),\r\n    background: getComputedStyle(document.documentElement).getPropertyValue(\"--background\"),\r\n    highlight: getComputedStyle(document.documentElement).getPropertyValue(\"--highlight\"),\r\n    header: getComputedStyle(document.documentElement).getPropertyValue(\"--header\"),\r\n    muted: getComputedStyle(document.documentElement).getPropertyValue(\"--muted\"),\r\n    text: getComputedStyle(document.documentElement).getPropertyValue(\"--text\")\r\n}","import React from 'react';\r\nimport './Icon.css';\r\n\r\nconst Icon = (props) => {\r\n    return(\r\n        <div className=\"col-5 icon-box rounded-pill text-center border-right-0\">\r\n            <span className=\"icon-text\">{props.text}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Icon;","import React, { Component } from 'react';\r\nimport { VerticalTimeline, VerticalTimelineElement }  from 'react-vertical-timeline-component';\r\nimport 'react-vertical-timeline-component/style.min.css';\r\nimport './Timeline.css';\r\nimport { Experience } from '../profile/experience.js';\r\nimport { Button } from 'reactstrap';\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport { Theme } from '../profile/theme';\r\nimport Icon from './Icon';\r\n\r\nclass Timeline extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Get list for experience \r\n        const numExp = Experience.length;\r\n        const expList = new Array(numExp);\r\n        for (var i =0; i < numExp; i ++) { expList[i] = false; }\r\n\r\n        this.state = {\r\n            experienceClicked: expList\r\n        };\r\n\r\n        this.toggleExperienceState = this.toggleExperienceState.bind(this);\r\n    }\r\n\r\n    toggleExperienceState = (i) => {\r\n        this.setState(state => {\r\n            const list = state.experienceClicked.map((item, j) => {\r\n                if (j===i){\r\n                    return !item;\r\n                } else {\r\n                    return item;\r\n                }\r\n            });\r\n            return {\r\n                experienceClicked: list,\r\n            };\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const TimelineElements = Experience.map((exp, index) => {\r\n            const desc = exp.description.split('\\n').map((line, i) => {\r\n                return (\r\n                    <span key={line+i}>{line}<br /></span>\r\n                )\r\n            });\r\n            \r\n            const skills = exp.skills.split(',').map((skill,i) => {\r\n                return (\r\n                    <Icon key={skill+i} text={skill} />\r\n                )\r\n            });\r\n\r\n            return(\r\n                <VerticalTimelineElement\r\n                        key={index}\r\n                        className=\"vertical-timeline-element--work\"\r\n                        contentStyle={{ background: `${Theme.block}`, color: `${Theme.text}`, \r\n                                borderTop: `3px solid ${Theme.muted}` }}\r\n                        contentArrowStyle={{ borderRight: `7px solid ${Theme.block}` }}\r\n                        date={exp.date}\r\n                        iconStyle={{background: `${Theme.background}`}}\r\n                        iconOnClick={() => this.toggleExperienceState(index)}\r\n                        icon={<img className='logo' src={exp.logo} alt='' />}\r\n                    >\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 col-md-7\">\r\n                                <h4 className=\"vertical-timeline-element-title timeline-header\">{exp.title}</h4>\r\n                                <h6 className=\"vertical-timeline-element-subtitle timeline-header\"><i>{exp.location}</i></h6>\r\n                                <div>\r\n                                    <p>\r\n                                        <em>{exp.shortdesc}</em>\r\n                                    </p>\r\n                                </div>\r\n                                <div>\r\n                                    <TransitionGroup component={null}>\r\n                                        { this.state.experienceClicked[index] && \r\n                                            <CSSTransition classNames=\"desc\" timeout={300}>\r\n                                                <p>\r\n                                                {desc}\r\n                                                </p>\r\n                                            </CSSTransition>\r\n                                        }\r\n                                    </TransitionGroup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-none d-md-block col-md-5\">\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        {skills}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12\">\r\n                                <div className=\"timeline-desc text-center\"\r\n                                    onClick={() => this.toggleExperienceState(index)} >\r\n                                    <Button size=\"block\" className=\"ml-auto desc-button\">\r\n                                        <small>\r\n                                            { !this.state.experienceClicked[index] && \r\n                                                <i className=\"fa fa-angle-down\"></i>\r\n                                            }\r\n                                            { this.state.experienceClicked[index] && \r\n                                                <i className=\"fa fa-angle-up\"></i>\r\n                                            }\r\n                                        </small>\r\n                                    </Button>\r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                    </VerticalTimelineElement>\r\n            )\r\n        });\r\n        return(\r\n            <div className=\"theme-background\">\r\n                <div className=\"section-header col-12 text-center\">\r\n                    <h1 className=\"mb-0\">Work Experience & Leadership Roles</h1>\r\n                    <p>My previous roles and involvement in activities</p>\r\n                </div>\r\n                <VerticalTimeline className=\"vertical-timeline theme-background\" layout='1-column-left'>\r\n                    {TimelineElements}\r\n                    <VerticalTimelineElement\r\n                        iconStyle={{ background: `${Theme.muted}`, color: '#fff' }}\r\n                    />\r\n                </VerticalTimeline>\r\n            </div>\r\n        );\r\n    } \r\n    \r\n}\r\n\r\nexport default Timeline;","export const ExpProjects = [\r\n    {\r\n        title: \"DSTA Brainhack 2020\",\r\n        subtitle: \"Champion - Today I Learned (TIL) Artificial Intelligence (AI) Camp\",\r\n        linktitle: \"Github Repo\",\r\n        category: \"competition\",\r\n        image: \"assets/images/projects/dsta_pic.JPG\",\r\n        link: \"https://github.com/xfated/DSTA_BrainHack2020_TIL_Group6\",\r\n        briefdesc:\"Proud to say that my team has emerged Champion for this competition!\",\r\n        details:[\r\n            \"<h3>What is it?\",\r\n            \"TIL 2020 is a competition organized by the Defence Science and Technology Agency as part of BrainHack2020 which involves Natural Language Processing and Computer Vision to train a robot to complete challenges autonomously.\",\r\n            \"\",\r\n            \"<h3>What did I accomplish?\",\r\n            \"<boldfirst>Achieved 1st place out of 92 Uni/Poly teams.\", \r\n            \"<boldfirst>Implemented transfer learning to create object detection models.\",\r\n            \"<boldfirst>Adapted image augmentation script into data pipeline to enhance model training.\",\r\n            \"<boldfirst>Developed code logic and applied object detection models in robot to autonomously identify objects, navigate obstacles and retrieve target.\"\r\n            ],\r\n        year: \"2020\"\r\n    },\r\n    {\r\n        title: \"LumiNus\",\r\n        subtitle: \"NUS Robomaster - Team LumiNUS\",\r\n        linktitle: \"Midterm Video\",\r\n        category: \"competition\",\r\n        image: \"assets/images/projects/robomaster.JPG\",\r\n        link: \"https://www.youtube.com/watch?v=puT_16ck2c8&feature=youtu.be\",\r\n        briefdesc: \"I was part of the pioneering team in NUS that laid the foundation and built the first prototypes.\",\r\n        details: [\r\n            \"<h3>What is it?\",\r\n            \"RoboMaster is an annual robotics competition held in Shenzhen, China and is organized by DJI. The purpose of \" +\r\n            \"RoboMaster is to develop young talents in the field of robotics and engieering.\",\r\n            \"\",\r\n            \"<h3>What did I accomplish?\", \r\n            \"<boldfirst>Part of the standard robot development team.\", \r\n            \"<boldfirst>Developed real-time software architecture for robots to interface with different sensors and motors.\", \r\n            \"<boldfirst>Implemented control loops for precise movement control.\",\r\n            \"<boldfirst>Embedded systems development in an ARM Cortex microcontroller.\"\r\n            ],\r\n        year: \"2020\"\r\n    },\r\n    {\r\n        title: \"Call For Code 2020\",\r\n        subtitle: \"SCDF X IBM Lifesavers' Innovation Challenge\",\r\n        linktitle: \"Github Repo\",\r\n        category: \"hackathon\",\r\n        image: \"assets/images/projects/scdfxibm.jpeg\",\r\n        link: \"https://github.com/xfated/BBM-ekaWay_SCDFXIBM\",\r\n        briefdesc: \"For this hackathon, my team and I have tackled the issue of how the traffic jams that plague \" +\r\n            \"our roads can affect the efficiency of our emergency responders.\",\r\n        details: [\r\n            \"<h3>Problem Statement:\",\r\n            \"How might we leverage a network of smart infrastructure in the built environment to make better and more timely \" +\r\n            \"sense of emergency incidents (e.g. detection of fires developing, building collapses, falls, road traffic accidents \" +\r\n            \"etc.) and to trigger early intervention measures, without the need to activate precious emergency resources?\",\r\n            \"\",\r\n            \"<h3>Our Solution:\",\r\n            \"Our solution aims to **notify drivers in advance** and make the **journey smoother and more efficient** for emergency vehicles.\", \r\n            \"\",\r\n            \"<boldfirst>Using the streetlights as visual signals for drivers to keep to the side of the roads.\",\r\n            \"<boldfirst>Preemptive control of traffic lights to prepare an uninterrupted route to the scene of an emergency.\"\r\n            ],\r\n        year: \"2020\"\r\n    },\r\n    {\r\n        title: \"NUS-IEEE Online Hackathon Fortnight\",\r\n        subtitle: \"Achieved 4th place\",\r\n        linktitle: \"\",\r\n        category: \"hackathon\",\r\n        image: \"assets/images/projects/dunduino.jpg\",\r\n        link: \"\",\r\n        briefdesc: \"Our project, FLOMK, is an interactive pet that simulates the experience of raising a pet.\" + \r\n                \"Prototyped with Arduino, it's as realistic as it can get!\",\r\n        details: [\r\n            \"<h3> What is it?\",\r\n            \"Organized by the IEEE NUS Student Branch, the Hackathon aims to provide a platform for cross-disciplinary appreciation and\" +\r\n            \" project implementation (hardware and software) with an end goal of exposing the varsity landscape to hack culture.\",\r\n            \"\",\r\n            \"<h3>Problem statement:\",\r\n            \"Using design concepts, create a software or hardware product that can benefit and contribute to environmental change in your community.\",\r\n            \"\", \r\n            \"<h3>Problem identified:\", \r\n            \"Irresponsible pet keeping results in undesirable release of invasive species into the ecosystem, endangering local wildlife.\",\r\n            \"\",\r\n            \"<h3>Identified HMW statement:\",\r\n            \"How might we use **technology** to create an **edutainment** tool to teach proper **petkeeping skills** to **young children**?\",\r\n            \"\", \r\n            \"<h3>Solution - FLOMK [Free Landscape Of Meddling Kritters]\", \r\n            \"<boldfirst>Interactive pet that helps to simulate the experience of raising a pet.\",\r\n            \"<boldfirst>Used arduino for robotic control.\",\r\n            \"<boldfirst>LED with photodetector to simulate feeding the pet.\",\r\n            \"<boldfirst>Object detection for responsive behaviour to changes in the environment.\", \r\n            \"<boldfirst>Robotic pet will be used in conjuction with a mobile app.\"\r\n            ],\r\n        year: \"2020\"\r\n    },\r\n    {\r\n        title: \"PRISM\",\r\n        subtitle: \"A Social Hackathon and Festival\",\r\n        linktitle: \"Presentation Slides\",\r\n        category: \"hackathon\",\r\n        image: \"assets/images/projects/prism.JPG\",\r\n        link: \"https://drive.google.com/file/d/1oaAsI7h5FYOpiSrG5MnFDc9Bb74puJyA/view?usp=sharing\",\r\n        briefdesc: \"Turnout is a platform that provides informal avenues to connect people who need mental support \" +\r\n                \"to those who are willing to interact and share.\",\r\n        details: [\r\n            \"<h3>What is it?\",\r\n            \"PRISM is a weekend-long social hackathon and festival that aims to provide a platform for youths to generate innovative, and sustainable, solutions to challenge statements sourced from community partners.\",\r\n            \"\",\r\n            \"<h3>Solution - Turnout\", \r\n            \"<boldfirst>Platform that provides informal avenues to connect people who need mental support to those who are willing to interact and share.\", \r\n            \"<boldfirst>Platform to connect two categories of people.\",\r\n            \"<boldfirst>Partake in discounted activities together.\",\r\n            \"<boldfirst>Conversation prompts that encourage sharing.\",\r\n            \"<boldfirst>Overcome the stigma behind seeking help.\",\r\n            ],\r\n        year: \"2020\"\r\n    },\r\n    {\r\n        title: \"Line2Image Generation\",\r\n        subtitle:\"\",\r\n        linktitle: \"Google Colab Notebook\",\r\n        category: \"sideproject\",\r\n        image:\"assets/images/projects/line2img.JPG\",\r\n        link:\"https://colab.research.google.com/drive/1oNHmhXipeI62CtVRLgaYoUej0sl4Brsc?usp=sharing\",\r\n        briefdesc:\"A mini project to experiment with pix2pix generation using CNNs\",\r\n        details:[\r\n            \"<h3>Inspiration\",\r\n            \"I just wanted to do a project using CNNs\",\r\n            \"\",\r\n            \"<h3>Data\",\r\n            \"<boldfirst>Used fatkun to batch download images from the internet.\",\r\n            \"<boldfirst>Canny edge detection to extract edges from original image.\",\r\n            \"\",\r\n            \"<h3>Method\",\r\n            \"<boldfirst>U-Net model to create an output image of the same size as the input.\",\r\n            \"<boldfirst>VGG16 network as a feature extractor to compare the generated image and the original image.\",\r\n            \"<boldfirst>Root mean squared distance between the two features as loss function.\"\r\n        ],\r\n        year:\"2020\"\r\n    },\r\n    {\r\n        title: \"Gym Equipment Classifier\",\r\n        subtitle:\"\",\r\n        linktitle: \"Website Deployment\",\r\n        category: \"sideproject\",\r\n        image:\"assets/images/projects/gymclass.JPG\",\r\n        link:\"https://xfated.github.io/gymclass/\",\r\n        briefdesc:\"I used transfer learning to create a gym equipment classifier :)\",\r\n        details:[\r\n            \"<h3>Motivation\",\r\n            \"<boldfirst>When the thought of losing weight and getting in shape presents itself, a common go-to place that many think of is the local gym. \" + \r\n            \"However, these new gym-goers who enter the place for the first time face a very similar experience. \",\r\n            \"Their untrained eyes breeze past a sea of foreign objects as they head towards the only equipment they know: dumbbells and treadmills. \" + \r\n            \"The occasional motivation to try out new machines might surface, only to be quickly brushed aside by the intimidating looks of massive bulking beasts or nonchalant individuals with their earpieces plugged in.\",\r\n            \"If only there was an easier way to make sense of these complicated machinery and learn how to use them...\",\r\n            \"\",\r\n            \"<boldfirst>P.S. This is a proof of concept I did with only 8 different types of gym equipment.\",\r\n            \"\",\r\n            \"<h3>What I did\",\r\n            \"<boldfirst>Batch downloaded images of gym equipment online.\",\r\n            \"<boldfirst>Finetuned on a pretrained VGG16 network.\",\r\n            \"<boldfirst>Used vanilla html and css to deploy it on a website.\"\r\n        ],\r\n        year:\"2020\"\r\n    },\r\n    {\r\n        title: \"K-Means Image Processing\",\r\n        subtitle:\"\",\r\n        linktitle: \"Github Repo\",\r\n        category: \"sideproject\",\r\n        image:\"assets/images/projects/kmeans.jpg\",\r\n        link:\"https://github.com/xfated/kmeans-picturecompression\",\r\n        briefdesc:\"Using K-means clustering to decrease the number of colors in an image.\",\r\n        details:[\r\n            \"<h3>What is it about?\",\r\n            \"This project explores the use of K-means clustering to identify the most common colors \" + \r\n            \"in an image, and repalces all pixels with the closest color.\",\r\n            \"\",\r\n            \"<h3>Motivation\",\r\n            \"<boldfirst>i find the minimalist versions of pictures to have a unique and pleasing aesthetic.\"\r\n        ],\r\n        year:\"2020\"\r\n    },\r\n    {\r\n        title: \"Telegram Chatbot\",\r\n        subtitle:\"\",\r\n        linktitle: \"Telegram Bot\",\r\n        category: \"sideproject\",\r\n        image:\"assets/images/projects/toiletpaperbot.JPG\",\r\n        link:\"http://t.me/paper_toilet_bot\",\r\n        briefdesc:\"A short project done to explore the use of Google's Dialogflow for chatbots.\",\r\n        details:[\r\n            \r\n        ],\r\n        year:\"2020\"\r\n    },\r\n    {\r\n        title: \"\",\r\n        subtitle:\"\",\r\n        linktitle: \"\",\r\n        category: \"\",\r\n        image:\"assets/images/projects/\",\r\n        link:\"\",\r\n        briefdesc:\"\",\r\n        details:[\r\n\r\n        ],\r\n        year:\"\"\r\n    }\r\n]","import React from 'react';\r\nimport Description from './Description';\r\nimport Timeline from './Timeline';\r\nimport Projects from './Projects';\r\n\r\nconst AboutMe = (props) => {\r\n    return(\r\n        <React.Fragment>\r\n            <Description />\r\n            <div className=\"divider\"></div>\r\n            <Timeline />\r\n            <div className=\"divider\"></div>\r\n            <Projects />\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default AboutMe;","import React, { useState, useEffect } from 'react';\r\n\r\nconst Decrypt = (props) => {\r\n\r\n    const total_time = parseInt(props.time,10);\r\n    const word = props.text;\r\n    const time_per_letter = total_time / word.length;\r\n    const letters = \"qwertyuiopasdfghjklzxcvbnm1234567890!@#$%^&*()_=\";\r\n    const num_letters = letters.length;\r\n    var initText = props.text;\r\n\r\n    // To update string\r\n    String.prototype.replaceAt = function(index, replacement) {\r\n        return this.substr(0, index) + replacement + this.substr(index + replacement.length);\r\n    }\r\n    for (var i = 0; i < word.length; i++){\r\n        initText = initText.replaceAt(i, letters[Math.floor(Math.random() * num_letters)]);\r\n    }\r\n\r\n    // Init states\r\n    const [text, setText] = useState(initText);\r\n    const [count, setCount] = useState(0);\r\n\r\n    // Functions to update letters\r\n    const updateWord = (letter, time) => {\r\n        return setTimeout(() => {\r\n            // Update new string for remainder\r\n            var remainder = '';\r\n            for (var i = 0; i < word.length - count - 1; i++){\r\n                remainder = remainder +  letters[Math.floor(Math.random() * num_letters)];\r\n            }\r\n            // Update string with next letter + remaining shuffled letters\r\n            setText(text.substr(0,count) + letter + remainder);\r\n            \r\n            setCount(count + 1);\r\n        }, time);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const animateDecrypt = () => {\r\n            for (var i = 0; i < word.length; i++){\r\n                updateWord(props.text[count], time_per_letter)\r\n            }\r\n        }\r\n        \r\n        if (count < props.text.length){\r\n            animateDecrypt();\r\n        }\r\n    }, [count])\r\n    \r\n\r\n    return(\r\n        <span>{text}</span>\r\n    );    \r\n}\r\n\r\nexport default Decrypt;\r\n","import React, { Component } from 'react';\r\nimport { Container, Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { MyInfo } from '../profile/myinfo';\r\nimport Decrypt from './Decrypt';\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport './Header.css';\r\n\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            isNavOpen: false,\r\n            user: MyInfo.firstname +  ' ' + MyInfo.lastname,\r\n            mounted: false,\r\n            description: MyInfo.description\r\n        }\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.resizedScreen = this.resizedScreen.bind(this);\r\n    }\r\n\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n    \r\n    componentDidMount(){\r\n        window.addEventListener(\"resize\", this.resizedScreen());\r\n        this.setState({\r\n            mounted: true\r\n        });\r\n    }\r\n\r\n    resizedScreen() {\r\n        if (window.innerWidth <= 576) {\r\n            this.setState({ user: MyInfo.firstname})\r\n        }\r\n        else {\r\n            this.setState({ user: MyInfo.firstname + ' ' + MyInfo.lastname})\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        const desc = this.state.description.split('\\n').map((line, i) => {\r\n            return (\r\n                <span key={line+i}>{line}<br /></span>\r\n            )\r\n        });\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <Jumbotron style={{ backgroundImage: `url('${process.env.PUBLIC_URL}/assets/images/wallpaper.jfif')`, backgroundSize: 'cover', \r\n                                borderRadius: \"0px\"}}>\r\n                    <Container className=\"text-center\">\r\n                        <h1 className=\"display-3 profile-header\">\r\n                            <Decrypt text={this.state.user} time='1500'/>\r\n                        </h1>\r\n                        <CSSTransition in={this.state.mounted} classNames=\"profile-desc-trans\" timeout={1000}>\r\n                            <p className=\"lead profile-desc\">{desc}</p>\r\n                        </CSSTransition>\r\n                    </Container>\r\n                </Jumbotron>\r\n                <div className=\"divider\"></div> \r\n                {/* <Navbar color='light' light expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarBrand href=\"/\">\r\n                            My Journey\r\n                        </NavbarBrand>\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav className=\"mr-auto\" navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/\">\r\n                                        Projects\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <div className=\"divider\"></div>  */}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Footer.css'\r\nimport { MyInfo } from '../profile/myinfo';\r\n\r\nconst Footer = (props) => {\r\n    return(\r\n        <div className=\"footer\">\r\n           <div className=\"divider\"></div>\r\n           <div className=\"footer-content flex flex-vertical-center flex-horizontal-center\"> \r\n                <blockquote className=\"blockquote text-center\">\r\n                    <p className=\"quote mb-0\">\r\n                        <i className=\"quote-icon fa fa-broom fa-pull-left\"></i>\r\n                        {MyInfo.footer_quote}\r\n                    </p>\r\n                </blockquote>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport AboutMe from './AboutMe';\r\nimport Header from './Header';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport Footer from './Footer';\r\n\r\nfunction Main() {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <Switch>\r\n                <Route path=\"/\" component={AboutMe} />\r\n                <Redirect to=\"/\" />\r\n            </Switch>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Main);","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport Main from './components/Main';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div>\r\n        <Main />\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}